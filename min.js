class Color{constructor(t){if(!t)throw new Error("[Color] requires an argument to its constructor");this.red_=null,this.green_=null,this.blue_=null,this.hue_=null,this.saturation_=null,this.lightness_=null;const e=Object.prototype.toString.call(t).replace(/^\[object ([a-z]+)\]$/i,"$1").toLowerCase();if("string"===e)this.parseString_(t);else{if("object"!==e)throw new Error("[Color] invalid argument passed to constructor");this.parseObject_(t)}}parseString_(t){const e=t.replace(/^#/,"").toUpperCase();if(3===e.length){const r=parseInt(e.charAt(0),16),s=parseInt(e.charAt(1),16),n=parseInt(e.charAt(2),16);if(isNaN(r)||isNaN(s)||isNaN(n))throw new Error("[Color] Invalid shorthand hex color ("+t+")");this.red_=17*r,this.green_=17*s,this.blue_=17*n}else{if(6!==e.length)throw new Error("[Color] Unparseable color string ("+t+")");{const r=parseInt(e.substr(0,2),16),s=parseInt(e.substr(2,2),16),n=parseInt(e.substr(4,2),16);if(isNaN(r)||isNaN(s)||isNaN(n))throw new Error("[Color] Invalid longhand hex color ("+t+")");this.red_=r,this.green_=s,this.blue_=n}}}parseObject_(t){if("red"in t)this.red_=t.red;else{if(!("R"in t))throw new Error("[Color] Unknown red value in parseObject_");this.red_=t.R}if("green"in t)this.green_=t.green;else{if(!("G"in t))throw new Error("[Color] Unknown green value in parseObject_");this.green_=t.G}if("blue"in t)this.blue_=t.blue;else{if(!("B"in t))throw new Error("[Color] Unknown blue value in parseObject_");this.blue_=t.B}}getRed(){return this.red_}getGreen(){return this.green_}getBlue(){return this.blue_}convertHSL_(){const t=this.red_/255,e=this.green_/255,r=this.blue_/255,s=Math.max(t,e,r),n=Math.min(t,e,r);var i=(s+n)/2,h=(s+n)/2,o=(s+n)/2;if(s===n)i=0,h=0;else{const l=s-n;h=o>.5?l/(2-s-n):l/(s+n),i=s===t?(e-r)/l%6:s===e?(r-t)/l+2:(t-e)/l+4}for(this.hue_=60*i%360;this.hue_<0;)this.hue_=this.hue_+360;this.saturation_=100*h,this.lightness_=100*o}getHue(){return null===this.hue_&&this.convertHSL_(),this.hue_}getSaturation(){return null===this.saturation_&&this.convertHSL_(),this.saturation_}getLightness(){return null===this.lightness_&&this.convertHSL_(),this.lightness_}getBrightness(){return Math.sqrt(.241*Math.pow(this.getRed(),2)+.691*Math.pow(this.getGreen(),2)+.068*Math.pow(this.getBlue(),2))}getHexString(){function t(t){for(var e=t.toString(16);e.length<2;)e="0"+e;return e}return"#"+t(this.getRed())+t(this.getGreen())+t(this.getBlue())}}
$(function(){var o,r,n;$("#background");const c=[],e=[];for(o=0;o<16;o++)for(r=0;r<16;r++)for(n=0;n<16;n++){const g=new Color({red:17*o,green:17*r,blue:17*n});c.push(g);const s=$("<hr />",{class:"magic"}).css({color:g.getHexString(),"background-color":g.getHexString()});e.push(s),s.appendTo("#background")}});
